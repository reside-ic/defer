% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/defer.R
\name{defer_errors}
\alias{defer_errors}
\title{Run a block of code, collecting deferrable errors}
\usage{
defer_errors(expr, handler = stop)
}
\arguments{
\item{expr}{An expression to evaluate}

\item{handler}{The final handler for the deferred errors.  The
default is \code{\link{stop}} which will raise the collected
error.  Alternatively, use \code{\link{return}} to return the
error}
}
\description{
Run a block of code, collecting any \code{\link{deferrable_error}}
calls that occur.  Ordinary errors will be thrown immediately.
}
\examples{
check_positive <- function(x) {
  if (x < 0) {
    deferrable_error(paste("got a negative number:", x))
  }
}
err <- tryCatch(
  defer::defer_errors({
    check_positive(0)
    check_positive(-1)
    check_positive(-2)
  }),
  error = identity)
err

## Directly return the error:
err <- defer::defer_errors({
  check_positive(0)
  check_positive(-1)
  check_positive(-2)
}, handler = return)
}
